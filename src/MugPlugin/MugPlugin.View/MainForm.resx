<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="mugScheme.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>